library(tidyverse)
library(tidymodels)
library(randomForest)
library(vip)
library(rpart.plot)
library(bnlearn)
AD <- readr::read_csv("alzheimer_data.csv")

#wrangling
AD_subset <- AD %>%
  select(-c(1, 11, 41:57)) %>% 
  mutate(female = as.factor(female)) %>% 
  mutate(diagnosis = as.factor(ifelse(diagnosis == 0, "No",
                                      ifelse(diagnosis == 1, "MCI", "Yes"))))


#bayesian network
AD_subset <- AD_subset %>% 
  select(diagnosis, memunits, bills, trailb, naccmmse, remdates, travel)
AD_subset <- as.data.frame(AD_subset)

#datasplit
n_train <- floor(n_total * 0.7)
set.seed(1738)
train_indices <- sample(1:n_total, n_train, 
                        replace = FALSE)
data_train <- AD_subset %>% slice(train_indices)
data_test <- AD_subset %>% slice(-train_indices)

#bayesian
data_train <- as.data.frame(data_train)
data_test <- as.data.frame(data_test)


AD_bn <- hc(AD_subset)
plot(AD_bn)

AD_bn <- hc(data_train)
fitted_bn <- bn.fit(AD_bn, data = data_train, method = 'mle-cg')

pred_bn <- predict(fitted_bn, node = "diagnosis", data = data_test, method = "bayes-lw")
confusion_matrix <- table(data_test$diagnosis, pred_bn)
accuracy <- sum(diag(confusion_matrix)) / 
  sum(confusion_matrix)

#random forest model
rf_fit <- randomForest(diagnosis ~ memunits + naccmmse + remdates + travel + bills + trailb, 
                       data = data_train, 
                       proximity = TRUE)
predictions <- predict(rf_fit, data_test)
accuracy <- sum(predictions == data_test$diagnosis) / 
  length(predictions)

#importance
vip(rf_fit)


#decision tree visual
tree_spec <- 
  decision_tree(mode = "classification", 
                engine = "rpart",
                cost_complexity = 0.005)
#Fit the model to the training data
tree_fit <- tree_spec %>% 
  fit(diagnosis ~ memunits + naccmmse + remdates + travel + bills, data = data_train)
rpart.plot(tree_fit$fit, roundint=FALSE)

#accuracy
predictions <- predict(tree_fit, new_data = data_test) %>%
  pull(.pred_class)
confusion_matrix <- table(predictions, data_test$diagnosis)
accuracy <- sum(diag(confusion_matrix)) / 
  sum(confusion_matrix)
